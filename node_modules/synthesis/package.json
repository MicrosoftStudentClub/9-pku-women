{
  "name": "synthesis",
  "version": "1.0.2",
  "homepage": "https://github.com/VirtuOz/synthesis",
  "author": {
    "name": "Kevan Dunsmore",
    "email": "kdunsmore@virtuoz.com"
  },
  "scripts": {
    "test": "node_modules/mocha/bin/_mocha test/*_test.js --ignore-leaks -t 20000 --reporter spec",
    "test-coverage": "scripts/runTestWithCoverage.sh",
    "clean": "rm -rf target"
  },
  "dependencies": {
    "jsclass": "3.0.9",
    "string": "1.1.0"
  },
  "devDependencies": {
    "mocha": "1.3.0",
    "chai": "1.1.1",
    "xunit-html-cov": "0.0.2"
  },
  "main": "./index.js",
  "readme": "synthesis\n=========\n[![Build Status](https://travis-ci.org/VirtuOz/synthesis.png)](https://travis-ci.org/VirtuOz/synthesis)\n\nSynthesis borrows from Objective C's property concept.  It cuts down on boilerplate code by automatically generating\nproperty accessors and mutators for an object.\n\n    var $synthesize = require('vnodelib').load('synthesis');\n\n    function MyObject()\n    {\n    }\n\n    $synthesize(MyObject, 'foo');                 // Creates a read/write property for 'foo'.\n    $synthesize(MyObject, 'bar', 'read');         // Creates a read-only property for 'bar'.\n    $synthesize(MyObject, 'baz', 'write');        // Creates a write-only property for 'baz'.\n    $synthesize(MyObject, 'qux', 'read-write');   // Creates a read/write property for 'qux'.\n\n    module.exports = MyObject;\n\nGenerated functions may be used like this:\n\n    var myObject = new MyObject();\n\n    myObject.setFoo('hello');\n    var fooValue = myObject.getFoo();\n\nInternally, the property may be accessed like this:\n\n    this.foo;\n    this['foo'];\n\n    var propName = 'foo';\n    this[propName];\n\nSynthesis is also compatible with JS.class:\n\n    var $synthesize = require('vnodelib').load('synthesis');\n\n    require('jsclass');\n    JS.require('JS.Class');\n\n    var JSClassTestObject = new JS.Class(\n    {\n        // my functions and stuff in here\n    });\n\n    $synthesize(JSClassTestObject, 'foo');\n    $synthesize(JSClassTestObject, 'bar', 'read');\n    $synthesize(JSClassTestObject, 'baz', 'write');\n    $synthesize(JSClassTestObject, 'qux', 'read-write');\n\n",
  "readmeFilename": "README.md",
  "description": "synthesis ========= [![Build Status](https://travis-ci.org/VirtuOz/synthesis.png)](https://travis-ci.org/VirtuOz/synthesis)",
  "_id": "synthesis@1.0.2",
  "_from": "synthesis@>= 1.0.2"
}
